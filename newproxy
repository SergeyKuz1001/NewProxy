#!/bin/bash

print_help_page() {
    echo "Usage: newproxy -s <source_name> -p <port> [-h <host>] [-n <file_name>] [-c] [-?]

  -s <source_name> - set file name with main functions to <source_name>
  -p <port> - set listening port
  -h <host> - set listening host (default to \"localhost\")
  -n <file_name> - set name of creating proxy server to <file_name> (default to \"proxy\")
  -c - compile proxy server as C project (default as C++ project)
  -? - print help page and exit"
}

newproxy_full_name=$(readlink -e "$0")
newproxy_dir=$(dirname "$newproxy_full_name")

on_C=no
file_name=proxy
host=localhost

while getopts "s:p:h:n:c?" opt
do
    case $opt in
    s)
        source_name=$OPTARG
        ;;
    p)
        port=$OPTARG
        ;;
    h)
        host=$OPTARG
        ;;
    n)
        file_name=$OPTARG
        ;;
    c)
        on_C=yes
        ;;
    ?)
        print_help_page
        exit 1
        ;;
    esac
done

if [[ -z $source_name || -z $port ]]
then
    print_help_page
    exit 1
fi

if ! sed -e "s/<host>/\"$host\"/; s/<port>/\"$port\"/" "$newproxy_dir"/proxy_main_proto.c > "$newproxy_dir"/proxy_main.c
then
    exit 1
fi

if [ "$on_C" = yes ]
then
    cp "$source_name" "$newproxy_dir"/user_funcs.c
else
    cp "$source_name" "$newproxy_dir"/user_funcs.cpp
fi

if [ $? != 0 ]
then
    exit 1
fi

if [ "$on_C" = yes ]
then
    gcc -O3 \
        "$newproxy_dir"/proxy_main.c \
        "$newproxy_dir"/proxy_funcs.c \
        "$newproxy_dir"/proxy_private_funcs.c \
        "$newproxy_dir"/proxy_trace.c \
        "$newproxy_dir"/user_funcs.c \
    -o "$file_name"
else
    g++ -O3 \
        "$newproxy_dir"/proxy_main.c \
        "$newproxy_dir"/proxy_funcs.c \
        "$newproxy_dir"/proxy_private_funcs.c \
        "$newproxy_dir"/proxy_trace.c \
        "$newproxy_dir"/user_funcs.cpp \
    -o "$file_name"
fi

if [ $? != 0 ]
then
    exit 1
fi

echo "Proxy \"$file_name\" is ready"

exit 0
